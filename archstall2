#!/bin/bash

#
# Archstall2 Arch Linux installer made by PowerMan2206.
# Meant to be run through the other script, don't run on it's own
#

# set style variables
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
bold=$(tput bold)
end=$(tput sgr0)

# set the variables
boot=`cat /bootmode`
disk=`cat /diskthing`
dm=`cat /dm`
de=`cat /de`

# select timezone region
echo ""
ls /usr/share/zoneinfo
echo ""
read -p "Select your ${yellow}region$end: " region

echo ""

# same but for city
echo ""
ls /usr/share/zoneinfo/$region
echo ""
read -p "Select your ${yellow}city$end: " city

echo ""

# actually set the timezone
echo "Setting the ${bold}timezone$end..."
ln -sf /usr/share/zoneinfo/$region/$city /etc/localtime

echo ""

# somethingsomething time
echo "Generating ${bold}/etc/adjtime$end..."
hwclock --systohc

echo ""

# locale stuff (???)
echo "Setting the ${bold}locale$end..."
sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf

echo ""

read -p "Type in the ${yellow}hostname$end [localhost] : " hostname
echo ""
echo "Setting the ${yellow}hostname$end..."
case $hostname in
	"" ) echo localhost > /etc/hostname ;;
	*  ) echo $hostname > /etc/hostname ;;
esac

echo ""

echo "Setting the ${red}root$end password..."
passwd

echo ""

read -p "Do you want to add a ${blue}user$end? [y] " user
case $user in
	yes | y | "" )
		read -p "What do you want to name your ${blue}user$end? [user] " username
		case $username in
			"" ) username="user" ;;
		esac
		
		# create sudo group
		groupadd sudo
		# adding user to sudo group and making the sudo group have sudo stuff
		useradd -m "$username" -G sudo
		sed -i 's/# %sudo/%sudo/' /etc/sudoers
	
		# user password
		echo "Setting the ${blue}user$end password..."
		passwd $username
	
		# AUR helper
		read -p "Do you want to install ${yellow}paru$end? [n] " aur
		case $aur in
			yes | y )
				pacman -S git --noconfirm
				cd /home/$username
				sudo -u $username git clone https://aur.archlinux.org/paru-bin.git
				cd paru-bin
				sudo -u $username makepkg -si --noconfirm
				cd ..
				rm -rf paru-bin
				;;
		esac

		;;
esac

clear

# network setup
read -p "Want to use ${yellow}systemd-networkd$end? [y] " network

case $network in
	yed | y | "" )
		echo ""
		# takes the long `ip a` output and shortens it down to just the interfaces
		ip a | grep "<" | cut -d':' -f2 | cut -c 2-
		echo ""
		read -p "Select your ${yellow}interface$end: " interface
	
		echo ""

		echo "Enabling needed services and writing configuration file..."
		systemctl enable systemd-networkd systemd-resolved
		echo "[Match]" >> /etc/systemd/network/20-wired.network
		echo "Name=$interface" >> /etc/systemd/network/20-wired.network
		echo "[Network]" >> /etc/systemd/network/20-wired.network
		echo "DHCP=yes" >> /etc/systemd/network/20-wired.network

		;;
esac

echo ""

# swapfile
read -p "Want a ${yellow}Swapfile$end? [y] " swap
echo ""

case $swap in
	yes | y | "" )
		read -p "How big should the Swapfile be (in MiB)? [1024] " swapsize

		# if no input is given, default to 1024
		case $swapfile in
			"" ) swapsize=1024 ;;
		esac

		echo ""

		echo "Making Swap..."
		dd if=/dev/zero of=/swapfile bs=1M count=$swapsize status=progress
		chmod 600 /swapfile
		mkswap /swapfile
		swapon /swapfile
		echo "/swapfile none swap defaults 0 0" >> /etc/fstab

		echo ""
		;;
esac

# enable services
case $de in
	y )
		echo "Enabling the DE-specific service..."
		systemctl enable $dm
		;;
esac

echo ""

# read CPU vendor (for microcode)
read -p "Do you have an ${blue}Intel$end or ${red}AMD$end CPU? (lowercase pls) " cpu
echo ""

# bootloader
echo "Installing GRUB..."
echo ""

# different installation methods based on the boot mode
case $boot in
	uefi )
		pacman -S grub efibootmgr $cpu-ucode --noconfirm
		echo ""
		grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB
		echo ""
		grub-mkconfig -o /boot/grub/grub.cfg
		;;

	bios )
		pacman -S grub $cpu-ucode --noconfirm
		echo ""
		grub-install /dev/$disk
		echo ""
		grub-mkconfig -o /boot/grub/grub.cfg
		;;
esac

exit
